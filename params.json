{
  "name": "Qmpbackup",
  "tagline": "Live Qemu Incremental backup using dirty-bitmaps",
  "body": "qmpbackup\r\n=========\r\n\r\nqmpbackup is designed to create live full and incremental backups of running\r\nqemu virtual machines via QMP protocol. It makes use of the dirty-bitmap\r\nfeature introduced in later qemu versions. It was mostly created for\r\neducational purposes and is by no means complete.\r\n\r\nPrerequisites\r\n-------------\r\n\r\nThe virtual machine must be reachable via QMP protocol on a unix socket,\r\nusually this happens by starting the virtual machine via:\r\n\r\n```\r\n qemu-system-<arch> <options> -qmp unix:/path/socket,server,nowait\r\n```\r\n\r\nqmpbackup makes use of this socket to pass needed commands to the\r\nvirtual machine.\r\n\r\nUsage\r\n-----\r\n\r\nIn order to create a full backup use the following command:\r\n\r\n```\r\n qmpbackup --socket /path/socket backup --level full --target /tmp/backup/\r\n```\r\n\r\nthe command will create a new dirty bitmap and backup the virtual machines\r\ndisks to ```/tmp/backup/<disk-id>/FULL-<timestamp>```. It ensures\r\nconsistency by creating the bitmap and backup within one QMP transaction.\r\n\r\nSee the following discussion on the qmeu-block mailinglist regarding\r\nthis topic:\r\n\r\n https://lists.nongnu.org/archive/html/qemu-block/2016-11/msg00682.html\r\n\r\nSecond step is to change some data within your virtual machine and let\r\nqmpbackup create an incremental backup for you, this works by:\r\n\r\n```\r\n qmpbackup --socket /path/socket backup --level inc --target /tmp/backup/\r\n```\r\n\r\nthe changed delta since your last full (or inc) backup will be dumped to\r\n```/tmp/backup/<disk-id>INC-<timestamp>```, the dirty-bitmap is automatically\r\ncleared after this and you can continue creating further incremental backups by\r\nre-issuing the command likewise.\r\n\r\nFilesystem Quisce\r\n-----------------\r\n\r\nIn case the virtual machine has an guest agent installed you can set the Qemu\r\nGuest Agent socket (```--agent-socket```)  and request filesytem quisce via\r\n```--quisce``` option:\r\n\r\n```\r\n  qmpbackup --socket /tmp/vm --agent-socket /tmp/qga.sock backup --level full --target /tmp/ --quisce\r\n```\r\n\r\nRestore\r\n-------\r\n\r\nRestoring your data is a matter of rebasing the created qcow images by\r\nusing standard tools such as qemu-img or ```qmprebase```.\r\n\r\nA image backup based on a backup folder containing the following backups:\r\n\r\n```\r\n /tmp/backup/ide0-hd0\r\n ├── FULL-1480542683\r\n ├── INC-1480542701\r\n └── INC-1480542712\r\n```\r\n\r\ncan be rolled back by using ```qmprebase```, it uses common qemu tools to check\r\nconsistency and does a rollback of your image file:\r\n\r\n```\r\n qmprebase  rebase --dir /tmp/backup/ide0-hd0\r\n```\r\n\r\nWhile rebasing the saveset chain is merged into your FULL image which then\r\ncontains the latest state and can be booted via Qemu again.\r\n\r\nMisc commands\r\n-------------\r\n\r\nIn order to remove existing dirty-bitmaps use:\r\n\r\n```\r\n qmpbackup --socket /tmp/vm cleanup --remove-bitmaps\r\n```\r\n\r\nsee \r\n\r\n```\r\n qmpbackup --help \r\n```\r\n\r\nfor more information and commands.\r\n\r\nLimitations\r\n-----------\r\n\r\n1) Dirty-bitmaps are not saved through vm shutdowns currently, qmpbackup will\r\nfail accordingly if no bitmap exists and an incremental backup is attempted.\r\nThis feature is currently worked on in Qemu and future versions might change\r\nthat behavior and will make bitmaps persistent.\r\n\r\n2) Using the QMP protocol it cannot be used together with libvirt as libvirt\r\nexclusively uses the virtual machines monitor socket. I think it will make sure\r\nto provide a good implementation of the dirty-bitmap feature in the future.\r\n\r\n3) Qemus ```drive-backup``` function does currently not support dumping\r\ndata as a stream, it also cannot work with fifo pipes as the blockdriver\r\nexpects functions as ftruncate and fseek to work on the target file.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}